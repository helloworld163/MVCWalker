%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 818 572
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Users\ruxia\Desktop\Fig5-b.eps)
%%CreationDate: Sun Apr 13 11:23:51 2014
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
%%BeginFont: /MC1_ArialBold
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 215.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_ArialBold def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1286 -771 4096 2084] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 54/s54 put
Encoding 55/s55 put
Encoding 56/s56 put
Encoding 57/s57 put
/BoundingBoxes 9 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s54 [0 -434 1139 1854] def
/s55 [0 -434 1139 1854] def
/s56 [0 -434 1139 1854] def
/s57 [0 -434 1139 1854] def
end
/Metrics 9 dict def
 Metrics begin
/s32 569 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s54 1139 def
/s55 1139 def
/s56 1139 def
/s57 1139 def
end
/CharProcs 9 dict def
CharProcs begin
/.notdef {} def
/s48 {
562 1472 m
704 1472 815 1421.33 895 1320 c
990.33 1200 1038 1001 1038 723 c
1038 445.67 990 246.33 894 125 c
814.67 25 704 -25 562 -25 c
419.33 -25 304.33 29.83 217 139.5 c
129.67 249.17 86 444.67 86 726 c
86 1002 134 1200.67 230 1322 c
309.33 1422 420 1472 562 1472 c
closepath 562 1239 m
528 1239 497.67 1228.17 471 1206.5 c
444.33 1184.83 423.67 1146 409 1090 c
389.67 1017.33 380 895 380 723 c
380 551 388.67 432.83 406 368.5 c
423.33 304.17 445.17 261.33 471.5 240 c
497.83 218.67 528 208 562 208 c
596 208 626.33 218.83 653 240.5 c
679.67 262.17 700.33 301 715 357 c
734.33 429 744 551 744 723 c
744 895 735.33 1013.17 718 1077.5 c
700.67 1141.83 678.83 1184.83 652.5 1206.5 c
626.17 1228.17 596 1239 562 1239 c
closepath } bind def
/s49 {
806 0 m
525 0 806 0 525 0 c
525 1059 525 0 525 1059 c
422.33 963 301.33 892 162 846 c
162 1101 162 846 162 1101 c
235.33 1125 315 1170.5 401 1237.5 c
487 1304.5 546 1382.67 578 1472 c
806 1472 578 1472 806 1472 c
806 0 806 1472 806 0 c
closepath } bind def
/s50 {
1036 261 m
1036 0 1036 261 1036 0 c
51 0 1036 0 51 0 c
61.67 98.67 93.67 192.17 147 280.5 c
200.33 368.83 305.67 486 463 632 c
589.67 750 667.33 830 696 872 c
734.67 930 754 987.33 754 1044 c
754 1106.67 737.17 1154.83 703.5 1188.5 c
669.83 1222.17 623.33 1239 564 1239 c
505.33 1239 458.67 1221.33 424 1186 c
389.33 1150.67 369.33 1092 364 1010 c
84 1038 364 1010 84 1038 c
100.67 1192.67 153 1303.67 241 1371 c
329 1438.33 439 1472 571 1472 c
715.67 1472 829.33 1433 912 1355 c
994.67 1277 1036 1180 1036 1064 c
1036 998 1024.17 935.17 1000.5 875.5 c
976.83 815.83 939.33 753.33 888 688 c
854 644.67 792.67 582.33 704 501 c
615.33 419.67 559.17 365.67 535.5 339 c
511.83 312.33 492.67 286.33 478 261 c
1036 261 478 261 1036 261 c
closepath } bind def
/s54 {
1039 1107 m
767 1077 1039 1107 767 1077 c
760.33 1133 743 1174.33 715 1201 c
687 1227.67 650.67 1241 606 1241 c
546.67 1241 496.5 1214.33 455.5 1161 c
414.5 1107.67 388.67 996.67 378 828 c
448 910.67 535 952 639 952 c
756.33 952 856.83 907.33 940.5 818 c
1024.17 728.67 1066 613.33 1066 472 c
1066 322 1022 201.67 934 111 c
846 20.33 733 -25 595 -25 c
447 -25 325.33 32.5 230 147.5 c
134.67 262.5 87 451 87 713 c
87 981.67 136.67 1175.33 236 1294 c
335.33 1412.67 464.33 1472 623 1472 c
734.33 1472 826.5 1440.83 899.5 1378.5 c
972.5 1316.17 1019 1225.67 1039 1107 c
closepath 402 494 m
402 402.67 423 332.17 465 282.5 c
507 232.83 555 208 609 208 c
661 208 704.33 228.33 739 269 c
773.67 309.67 791 376.33 791 469 c
791 564.33 772.33 634.17 735 678.5 c
697.67 722.83 651 745 595 745 c
541 745 495.33 723.83 458 681.5 c
420.67 639.17 402 576.67 402 494 c
closepath } bind def
/s55 {
87 1185 m
87 1446 87 1185 87 1446 c
1048 1446 87 1446 1048 1446 c
1048 1242 1048 1446 1048 1242 c
968.67 1164 888 1052 806 906 c
724 760 661.5 604.83 618.5 440.5 c
575.5 276.17 554.33 129.33 555 0 c
284 0 555 0 284 0 c
288.67 202.67 330.5 409.33 409.5 620 c
488.5 830.67 594 1019 726 1185 c
87 1185 726 1185 87 1185 c
closepath } bind def
/s56 {
328 791 m
255.33 821.67 202.5 863.83 169.5 917.5 c
136.5 971.17 120 1030 120 1094 c
120 1203.33 158.17 1293.67 234.5 1365 c
310.83 1436.33 419.33 1472 560 1472 c
699.33 1472 807.5 1436.33 884.5 1365 c
961.5 1293.67 1000 1203.33 1000 1094 c
1000 1026 982.33 965.5 947 912.5 c
911.67 859.5 862 819 798 791 c
879.33 758.33 941.17 710.67 983.5 648 c
1025.83 585.33 1047 513 1047 431 c
1047 295.67 1003.83 185.67 917.5 101 c
831.17 16.33 716.33 -26 573 -26 c
439.67 -26 328.67 9 240 79 c
135.33 161.67 83 275 83 419 c
83 498.33 102.67 571.17 142 637.5 c
181.33 703.83 243.33 755 328 791 c
closepath 386 1074 m
386 1018 401.83 974.33 433.5 943 c
465.17 911.67 507.33 896 560 896 c
613.33 896 656 911.83 688 943.5 c
720 975.17 736 1019 736 1075 c
736 1127.67 720.17 1169.83 688.5 1201.5 c
656.83 1233.17 615 1249 563 1249 c
509 1249 466 1233 434 1201 c
402 1169 386 1126.67 386 1074 c
closepath 360 446 m
360 368.67 379.83 308.33 419.5 265 c
459.17 221.67 508.67 200 568 200 c
626 200 674 220.83 712 262.5 c
750 304.17 769 364.33 769 443 c
769 511.67 749.67 566.83 711 608.5 c
672.33 650.17 623.33 671 564 671 c
495.33 671 444.17 647.33 410.5 600 c
376.83 552.67 360 501.33 360 446 c
closepath } bind def
/s57 {
93 339 m
365 369 93 339 365 369 c
371.67 313.67 389 272.67 417 246 c
445 219.33 482 206 528 206 c
586 206 635.33 232.67 676 286 c
716.67 339.33 742.67 450 754 618 c
683.33 536 595 495 489 495 c
373.67 495 274.17 539.5 190.5 628.5 c
106.83 717.5 65 833.33 65 976 c
65 1124.67 109.17 1244.5 197.5 1335.5 c
285.83 1426.5 398.33 1472 535 1472 c
683.67 1472 805.67 1414.5 901 1299.5 c
996.33 1184.5 1044 995.33 1044 732 c
1044 464 994.33 270.67 895 152 c
795.67 33.33 666.33 -26 507 -26 c
392.33 -26 299.67 4.5 229 65.5 c
158.33 126.5 113 217.67 93 339 c
closepath 729 953 m
729 1043.67 708.17 1114 666.5 1164 c
624.83 1214 576.67 1239 522 1239 c
470 1239 426.83 1218.5 392.5 1177.5 c
358.17 1136.5 341 1069.33 341 976 c
341 881.33 359.67 811.83 397 767.5 c
434.33 723.17 481 701 537 701 c
591 701 636.5 722.33 673.5 765 c
710.5 807.67 729 870.33 729 953 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_ArialBold exch definefont pop
%%EndFont
%%BeginFont: /MC2_ArialBold
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 215.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_ArialBold def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1286 -771 4096 2084] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 37/s37 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 82/s82 put
Encoding 97/s97 put
Encoding 99/s99 put
Encoding 101/s101 put
Encoding 108/s108 put
Encoding 116/s116 put
/BoundingBoxes 11 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s37 [0 -434 1821 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s82 [0 -434 1479 1854] def
/s97 [0 -434 1139 1854] def
/s99 [0 -434 1139 1854] def
/s101 [0 -434 1139 1854] def
/s108 [0 -434 569 1854] def
/s116 [0 -434 682 1854] def
end
/Metrics 11 dict def
 Metrics begin
/s32 569 def
/s37 1821 def
/s40 682 def
/s41 682 def
/s82 1479 def
/s97 1139 def
/s99 1139 def
/s101 1139 def
/s108 569 def
/s116 682 def
end
/CharProcs 11 dict def
CharProcs begin
/.notdef {} def
/s37 {
89 1104 m
89 1235.33 117.83 1332.67 175.5 1396 c
233.17 1459.33 311.33 1491 410 1491 c
512 1491 591.83 1459.5 649.5 1396.5 c
707.17 1333.5 736 1236 736 1104 c
736 972.67 707.17 875.33 649.5 812 c
591.83 748.67 513.67 717 415 717 c
313 717 233.17 748.5 175.5 811.5 c
117.83 874.5 89 972 89 1104 c
closepath 308 1106 m
308 1010.67 319 946.67 341 914 c
357.67 890 380.67 878 410 878 c
440 878 463.33 890 480 914 c
501.33 946.67 512 1010.67 512 1106 c
512 1201.33 501.33 1265 480 1297 c
463.33 1321.67 440 1334 410 1334 c
380.67 1334 357.67 1322 341 1298 c
319 1265.33 308 1201.33 308 1106 c
closepath 624 -56 m
416 -56 624 -56 416 -56 c
1197 1491 416 -56 1197 1491 c
1399 1491 1197 1491 1399 1491 c
624 -56 1399 1491 624 -56 c
closepath 1078 329 m
1078 460.33 1106.83 557.67 1164.5 621 c
1222.17 684.33 1301 716 1401 716 c
1501.67 716 1580.83 684.33 1638.5 621 c
1696.17 557.67 1725 460.33 1725 329 c
1725 197 1696.17 99.33 1638.5 36 c
1580.83 -27.33 1502.67 -59 1404 -59 c
1302 -59 1222.17 -27.33 1164.5 36 c
1106.83 99.33 1078 197 1078 329 c
closepath 1297 330 m
1297 234.67 1308 171 1330 139 c
1346.67 114.33 1369.67 102 1399 102 c
1429 102 1452 114 1468 138 c
1490 170.67 1501 234.67 1501 330 c
1501 425.33 1490.33 489.33 1469 522 c
1452.33 546 1429 558 1399 558 c
1369 558 1346 546 1330 522 c
1308 489.33 1297 425.33 1297 330 c
closepath } bind def
/s40 {
613 -431 m
420 -431 613 -431 420 -431 c
318 -277 240.33 -117 187 49 c
133.67 215 107 375.67 107 531 c
107 723.67 140 906 206 1078 c
263.33 1227.33 336 1365 424 1491 c
616 1491 424 1491 616 1491 c
524.67 1289 461.83 1117.17 427.5 975.5 c
393.17 833.83 376 683.67 376 525 c
376 415.67 386.17 303.67 406.5 189 c
426.83 74.33 454.67 -34.67 490 -138 c
513.33 -206 554.33 -303.67 613 -431 c
closepath } bind def
/s41 {
69 -431 m
124.33 -312.33 163.33 -221.33 186 -158 c
208.67 -94.67 229.67 -21.67 249 61 c
268.33 143.67 282.67 222.17 292 296.5 c
301.33 370.83 306 447 306 525 c
306 683.67 289 833.83 255 975.5 c
221 1117.17 158.33 1289 67 1491 c
258 1491 67 1491 258 1491 c
358.67 1347.67 436.83 1195.67 492.5 1035 c
548.17 874.33 576 711.33 576 546 c
576 406.67 554 257.33 510 98 c
460 -80.67 377.67 -257 263 -431 c
69 -431 263 -431 69 -431 c
closepath } bind def
/s82 {
150 0 m
150 1466 150 0 150 1466 c
773 1466 150 1466 773 1466 c
929.67 1466 1043.5 1452.83 1114.5 1426.5 c
1185.5 1400.17 1242.33 1353.33 1285 1286 c
1327.67 1218.67 1349 1141.67 1349 1055 c
1349 945 1316.67 854.17 1252 782.5 c
1187.33 710.83 1090.67 665.67 962 647 c
1026 609.67 1078.83 568.67 1120.5 524 c
1162.17 479.33 1218.33 400 1289 286 c
1468 0 1289 286 1468 0 c
1114 0 1468 0 1114 0 c
900 319 1114 0 900 319 c
824 433 772 504.83 744 534.5 c
716 564.17 686.33 584.5 655 595.5 c
623.67 606.5 574 612 506 612 c
446 612 506 612 446 612 c
446 0 446 612 446 0 c
150 0 446 0 150 0 c
closepath 446 846 m
665 846 446 846 665 846 c
807 846 895.67 852 931 864 c
966.33 876 994 896.67 1014 926 c
1034 955.33 1044 992 1044 1036 c
1044 1085.33 1030.83 1125.17 1004.5 1155.5 c
978.17 1185.83 941 1205 893 1213 c
869 1216.33 797 1218 677 1218 c
446 1218 677 1218 446 1218 c
446 846 446 1218 446 846 c
closepath } bind def
/s97 {
357 738 m
102 784 357 738 102 784 c
130.67 886.67 180 962.67 250 1012 c
320 1061.33 424 1086 562 1086 c
687.33 1086 780.67 1071.17 842 1041.5 c
903.33 1011.83 946.5 974.17 971.5 928.5 c
996.5 882.83 1009 799 1009 677 c
1006 349 1009 677 1006 349 c
1006 255.67 1010.5 186.83 1019.5 142.5 c
1028.5 98.17 1045.33 50.67 1070 0 c
792 0 1070 0 792 0 c
784.67 18.67 775.67 46.33 765 83 c
760.33 99.67 757 110.67 755 116 c
707 69.33 655.67 34.33 601 11 c
546.33 -12.33 488 -24 426 -24 c
316.67 -24 230.5 5.67 167.5 65 c
104.5 124.33 73 199.33 73 290 c
73 350 87.33 403.5 116 450.5 c
144.67 497.5 184.83 533.5 236.5 558.5 c
288.17 583.5 362.67 605.33 460 624 c
591.33 648.67 682.33 671.67 733 693 c
733 721 733 693 733 721 c
733 775 719.67 813.5 693 836.5 c
666.33 859.5 616 871 542 871 c
492 871 453 861.17 425 841.5 c
397 821.83 374.33 787.33 357 738 c
closepath 733 510 m
697 498 640 483.67 562 467 c
484 450.33 433 434 409 418 c
372.33 392 354 359 354 319 c
354 279.67 368.67 245.67 398 217 c
427.33 188.33 464.67 174 510 174 c
560.67 174 609 190.67 655 224 c
689 249.33 711.33 280.33 722 317 c
729.33 341 733 386.67 733 454 c
733 510 733 454 733 510 c
closepath } bind def
/s99 {
1073 748 m
796 698 1073 748 796 698 c
786.67 753.33 765.5 795 732.5 823 c
699.5 851 656.67 865 604 865 c
534 865 478.17 840.83 436.5 792.5 c
394.83 744.17 374 663.33 374 550 c
374 424 395.17 335 437.5 283 c
479.83 231 536.67 205 608 205 c
661.33 205 705 220.17 739 250.5 c
773 280.83 797 333 811 407 c
1087 360 811 407 1087 360 c
1058.33 233.33 1003.33 137.67 922 73 c
840.67 8.33 731.67 -24 595 -24 c
439.67 -24 315.83 25 223.5 123 c
131.17 221 85 356.67 85 530 c
85 705.33 131.33 841.83 224 939.5 c
316.67 1037.17 442 1086 600 1086 c
729.33 1086 832.17 1058.17 908.5 1002.5 c
984.83 946.83 1039.67 862 1073 748 c
closepath } bind def
/s101 {
762 338 m
1042 291 762 338 1042 291 c
1006 188.33 949.17 110.17 871.5 56.5 c
793.83 2.83 696.67 -24 580 -24 c
395.33 -24 258.67 36.33 170 157 c
100 253.67 65 375.67 65 523 c
65 699 111 836.83 203 936.5 c
295 1036.17 411.33 1086 552 1086 c
710 1086 834.67 1033.83 926 929.5 c
1017.33 825.17 1061 665.33 1057 450 c
353 450 1057 450 353 450 c
355 366.67 377.67 301.83 421 255.5 c
464.33 209.17 518.33 186 583 186 c
627 186 664 198 694 222 c
724 246 746.67 284.67 762 338 c
closepath 778 622 m
776 703.33 755 765.17 715 807.5 c
675 849.83 626.33 871 569 871 c
507.67 871 457 848.67 417 804 c
377 759.33 357.33 698.67 358 622 c
778 622 358 622 778 622 c
closepath } bind def
/s108 {
147 0 m
147 1466 147 0 147 1466 c
428 1466 147 1466 428 1466 c
428 0 428 1466 428 0 c
147 0 428 0 147 0 c
closepath } bind def
/s116 {
634 1062 m
634 838 634 1062 634 838 c
442 838 634 838 442 838 c
442 410 442 838 442 410 c
442 323.33 443.83 272.83 447.5 258.5 c
451.17 244.17 459.5 232.33 472.5 223 c
485.5 213.67 501.33 209 520 209 c
546 209 583.67 218 633 236 c
657 18 633 236 657 18 c
591.67 -10 517.67 -24 435 -24 c
384.33 -24 338.67 -15.5 298 1.5 c
257.33 18.5 227.5 40.5 208.5 67.5 c
189.5 94.5 176.33 131 169 177 c
163 209.67 160 275.67 160 375 c
160 838 160 375 160 838 c
31 838 160 838 31 838 c
31 1062 31 838 31 1062 c
160 1062 31 1062 160 1062 c
160 1273 160 1062 160 1273 c
442 1437 160 1273 442 1437 c
442 1062 442 1437 442 1062 c
634 1062 442 1062 634 1062 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_ArialBold exch definefont pop
%%EndFont
%%BeginFont: /MC3_ArialBold
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 215.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_ArialBold def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1286 -771 4096 2084] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 67/s67 put
Encoding 68/s68 put
Encoding 77/s77 put
Encoding 80/s80 put
Encoding 82/s82 put
Encoding 84/s84 put
Encoding 86/s86 put
Encoding 87/s87 put
Encoding 97/s97 put
Encoding 101/s101 put
Encoding 103/s103 put
Encoding 105/s105 put
Encoding 107/s107 put
Encoding 108/s108 put
Encoding 109/s109 put
Encoding 110/s110 put
Encoding 111/s111 put
Encoding 114/s114 put
Encoding 115/s115 put
Encoding 116/s116 put
/BoundingBoxes 22 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s67 [0 -434 1479 1854] def
/s68 [0 -434 1479 1854] def
/s77 [0 -434 1706 1854] def
/s80 [0 -434 1366 1854] def
/s82 [0 -434 1479 1854] def
/s84 [0 -434 1251 1854] def
/s86 [-1 -434 1366 1854] def
/s87 [0 -434 1933 1854] def
/s97 [0 -434 1139 1854] def
/s101 [0 -434 1139 1854] def
/s103 [0 -434 1251 1854] def
/s105 [0 -434 569 1854] def
/s107 [0 -434 1139 1854] def
/s108 [0 -434 569 1854] def
/s109 [0 -434 1821 1854] def
/s110 [0 -434 1251 1854] def
/s111 [0 -434 1251 1854] def
/s114 [0 -434 797 1854] def
/s115 [0 -434 1139 1854] def
/s116 [0 -434 682 1854] def
end
/Metrics 22 dict def
 Metrics begin
/s32 569 def
/s67 1479 def
/s68 1479 def
/s77 1706 def
/s80 1366 def
/s82 1479 def
/s84 1251 def
/s86 1366 def
/s87 1933 def
/s97 1139 def
/s101 1139 def
/s103 1251 def
/s105 569 def
/s107 1139 def
/s108 569 def
/s109 1821 def
/s110 1251 def
/s111 1251 def
/s114 797 def
/s115 1139 def
/s116 682 def
end
/CharProcs 22 dict def
CharProcs begin
/.notdef {} def
/s67 {
1087 539 m
1374 448 1087 539 1374 448 c
1330 288 1256.83 169.17 1154.5 91.5 c
1052.17 13.83 922.33 -25 765 -25 c
570.33 -25 410.33 41.5 285 174.5 c
159.67 307.5 97 489.33 97 720 c
97 964 160 1153.5 286 1288.5 c
412 1423.5 577.67 1491 783 1491 c
962.33 1491 1108 1438 1220 1332 c
1286.67 1269.33 1336.67 1179.33 1370 1062 c
1077 992 1370 1062 1077 992 c
1059.67 1068 1023.5 1128 968.5 1172 c
913.5 1216 846.67 1238 768 1238 c
659.33 1238 571.17 1199 503.5 1121 c
435.83 1043 402 916.67 402 742 c
402 556.67 435.33 424.67 502 346 c
568.67 267.33 655.33 228 762 228 c
840.67 228 908.33 253 965 303 c
1021.67 353 1062.33 431.67 1087 539 c
closepath } bind def
/s68 {
148 1466 m
689 1466 148 1466 689 1466 c
811 1466 904 1456.67 968 1438 c
1054 1412.67 1127.67 1367.67 1189 1303 c
1250.33 1238.33 1297 1159.17 1329 1065.5 c
1361 971.83 1377 856.33 1377 719 c
1377 598.33 1362 494.33 1332 407 c
1295.33 300.33 1243 214 1175 148 c
1123.67 98 1054.33 59 967 31 c
901.67 10.33 814.33 0 705 0 c
148 0 705 0 148 0 c
148 1466 148 0 148 1466 c
closepath 444 1218 m
444 247 444 1218 444 247 c
665 247 444 247 665 247 c
747.67 247 807.33 251.67 844 261 c
892 273 931.83 293.33 963.5 322 c
995.17 350.67 1021 397.83 1041 463.5 c
1061 529.17 1071 618.67 1071 732 c
1071 845.33 1061 932.33 1041 993 c
1021 1053.67 993 1101 957 1135 c
921 1169 875.33 1192 820 1204 c
778.67 1213.33 697.67 1218 577 1218 c
444 1218 577 1218 444 1218 c
closepath } bind def
/s77 {
145 0 m
145 1466 145 0 145 1466 c
588 1466 145 1466 588 1466 c
854 466 588 1466 854 466 c
1117 1466 854 466 1117 1466 c
1561 1466 1117 1466 1561 1466 c
1561 0 1561 1466 1561 0 c
1286 0 1561 0 1286 0 c
1286 1154 1286 0 1286 1154 c
995 0 1286 1154 995 0 c
710 0 995 0 710 0 c
420 1154 710 0 420 1154 c
420 0 420 1154 420 0 c
145 0 420 0 145 0 c
closepath } bind def
/s80 {
149 0 m
149 1466 149 0 149 1466 c
624 1466 149 1466 624 1466 c
804 1466 921.33 1458.67 976 1444 c
1060 1422 1130.33 1374.17 1187 1300.5 c
1243.67 1226.83 1272 1131.67 1272 1015 c
1272 925 1255.67 849.33 1223 788 c
1190.33 726.67 1148.83 678.5 1098.5 643.5 c
1048.17 608.5 997 585.33 945 574 c
874.33 560 772 553 638 553 c
445 553 638 553 445 553 c
445 0 445 553 445 0 c
149 0 445 0 149 0 c
closepath 445 1218 m
445 802 445 1218 445 802 c
607 802 445 802 607 802 c
723.67 802 801.67 809.67 841 825 c
880.33 840.33 911.17 864.33 933.5 897 c
955.83 929.67 967 967.67 967 1011 c
967 1064.33 951.33 1108.33 920 1143 c
888.67 1177.67 849 1199.33 801 1208 c
765.67 1214.67 694.67 1218 588 1218 c
445 1218 588 1218 445 1218 c
closepath } bind def
/s82 {
150 0 m
150 1466 150 0 150 1466 c
773 1466 150 1466 773 1466 c
929.67 1466 1043.5 1452.83 1114.5 1426.5 c
1185.5 1400.17 1242.33 1353.33 1285 1286 c
1327.67 1218.67 1349 1141.67 1349 1055 c
1349 945 1316.67 854.17 1252 782.5 c
1187.33 710.83 1090.67 665.67 962 647 c
1026 609.67 1078.83 568.67 1120.5 524 c
1162.17 479.33 1218.33 400 1289 286 c
1468 0 1289 286 1468 0 c
1114 0 1468 0 1114 0 c
900 319 1114 0 900 319 c
824 433 772 504.83 744 534.5 c
716 564.17 686.33 584.5 655 595.5 c
623.67 606.5 574 612 506 612 c
446 612 506 612 446 612 c
446 0 446 612 446 0 c
150 0 446 0 150 0 c
closepath 446 846 m
665 846 446 846 665 846 c
807 846 895.67 852 931 864 c
966.33 876 994 896.67 1014 926 c
1034 955.33 1044 992 1044 1036 c
1044 1085.33 1030.83 1125.17 1004.5 1155.5 c
978.17 1185.83 941 1205 893 1213 c
869 1216.33 797 1218 677 1218 c
446 1218 677 1218 446 1218 c
446 846 446 1218 446 846 c
closepath } bind def
/s84 {
479 0 m
479 1218 479 0 479 1218 c
44 1218 479 1218 44 1218 c
44 1466 44 1218 44 1466 c
1209 1466 44 1466 1209 1466 c
1209 1218 1209 1466 1209 1218 c
775 1218 1209 1218 775 1218 c
775 0 775 1218 775 0 c
479 0 775 0 479 0 c
closepath } bind def
/s86 {
523 0 m
-1 1466 523 0 -1 1466 c
320 1466 -1 1466 320 1466 c
691 381 320 1466 691 381 c
1050 1466 691 381 1050 1466 c
1364 1466 1050 1466 1364 1466 c
839 0 1364 1466 839 0 c
523 0 839 0 523 0 c
closepath } bind def
/s87 {
357 0 m
7 1466 357 0 7 1466 c
310 1466 7 1466 310 1466 c
531 459 310 1466 531 459 c
799 1466 531 459 799 1466 c
1151 1466 799 1466 1151 1466 c
1408 442 1151 1466 1408 442 c
1633 1466 1408 442 1633 1466 c
1931 1466 1633 1466 1931 1466 c
1575 0 1931 1466 1575 0 c
1261 0 1575 0 1261 0 c
969 1096 1261 0 969 1096 c
678 0 969 1096 678 0 c
357 0 678 0 357 0 c
closepath } bind def
/s97 {
357 738 m
102 784 357 738 102 784 c
130.67 886.67 180 962.67 250 1012 c
320 1061.33 424 1086 562 1086 c
687.33 1086 780.67 1071.17 842 1041.5 c
903.33 1011.83 946.5 974.17 971.5 928.5 c
996.5 882.83 1009 799 1009 677 c
1006 349 1009 677 1006 349 c
1006 255.67 1010.5 186.83 1019.5 142.5 c
1028.5 98.17 1045.33 50.67 1070 0 c
792 0 1070 0 792 0 c
784.67 18.67 775.67 46.33 765 83 c
760.33 99.67 757 110.67 755 116 c
707 69.33 655.67 34.33 601 11 c
546.33 -12.33 488 -24 426 -24 c
316.67 -24 230.5 5.67 167.5 65 c
104.5 124.33 73 199.33 73 290 c
73 350 87.33 403.5 116 450.5 c
144.67 497.5 184.83 533.5 236.5 558.5 c
288.17 583.5 362.67 605.33 460 624 c
591.33 648.67 682.33 671.67 733 693 c
733 721 733 693 733 721 c
733 775 719.67 813.5 693 836.5 c
666.33 859.5 616 871 542 871 c
492 871 453 861.17 425 841.5 c
397 821.83 374.33 787.33 357 738 c
closepath 733 510 m
697 498 640 483.67 562 467 c
484 450.33 433 434 409 418 c
372.33 392 354 359 354 319 c
354 279.67 368.67 245.67 398 217 c
427.33 188.33 464.67 174 510 174 c
560.67 174 609 190.67 655 224 c
689 249.33 711.33 280.33 722 317 c
729.33 341 733 386.67 733 454 c
733 510 733 454 733 510 c
closepath } bind def
/s101 {
762 338 m
1042 291 762 338 1042 291 c
1006 188.33 949.17 110.17 871.5 56.5 c
793.83 2.83 696.67 -24 580 -24 c
395.33 -24 258.67 36.33 170 157 c
100 253.67 65 375.67 65 523 c
65 699 111 836.83 203 936.5 c
295 1036.17 411.33 1086 552 1086 c
710 1086 834.67 1033.83 926 929.5 c
1017.33 825.17 1061 665.33 1057 450 c
353 450 1057 450 353 450 c
355 366.67 377.67 301.83 421 255.5 c
464.33 209.17 518.33 186 583 186 c
627 186 664 198 694 222 c
724 246 746.67 284.67 762 338 c
closepath 778 622 m
776 703.33 755 765.17 715 807.5 c
675 849.83 626.33 871 569 871 c
507.67 871 457 848.67 417 804 c
377 759.33 357.33 698.67 358 622 c
778 622 358 622 778 622 c
closepath } bind def
/s103 {
121 -70 m
442 -109 121 -70 442 -109 c
447.33 -146.33 459.67 -172 479 -186 c
505.67 -206 547.67 -216 605 -216 c
678.33 -216 733.33 -205 770 -183 c
794.67 -168.33 813.33 -144.67 826 -112 c
834.67 -88.67 839 -45.67 839 17 c
839 172 839 17 839 172 c
755 57.33 649 0 521 0 c
378.33 0 265.33 60.33 182 181 c
116.67 276.33 84 395 84 537 c
84 715 126.83 851 212.5 945 c
298.17 1039 404.67 1086 532 1086 c
663.33 1086 771.67 1028.33 857 913 c
857 1062 857 913 857 1062 c
1120 1062 857 1062 1120 1062 c
1120 109 1120 1062 1120 109 c
1120 -16.33 1109.67 -110 1089 -172 c
1068.33 -234 1039.33 -282.67 1002 -318 c
964.67 -353.33 914.83 -381 852.5 -401 c
790.17 -421 711.33 -431 616 -431 c
436 -431 308.33 -400.17 233 -338.5 c
157.67 -276.83 120 -198.67 120 -104 c
120 -94.67 120.33 -83.33 121 -70 c
closepath 372 553 m
372 440.33 393.83 357.83 437.5 305.5 c
481.17 253.17 535 227 599 227 c
667.67 227 725.67 253.83 773 307.5 c
820.33 361.17 844 440.67 844 546 c
844 656 821.33 737.67 776 791 c
730.67 844.33 673.33 871 604 871 c
536.67 871 481.17 844.83 437.5 792.5 c
393.83 740.17 372 660.33 372 553 c
closepath } bind def
/s105 {
147 1206 m
147 1466 147 1206 147 1466 c
428 1466 147 1466 428 1466 c
428 1206 428 1466 428 1206 c
147 1206 428 1206 147 1206 c
closepath 147 0 m
147 1062 147 0 147 1062 c
428 1062 147 1062 428 1062 c
428 0 428 1062 428 0 c
147 0 428 0 147 0 c
closepath } bind def
/s107 {
137 0 m
137 1466 137 0 137 1466 c
418 1466 137 1466 418 1466 c
418 688 418 1466 418 688 c
747 1062 418 688 747 1062 c
1093 1062 747 1062 1093 1062 c
730 674 1093 1062 730 674 c
1119 0 730 674 1119 0 c
816 0 1119 0 816 0 c
549 477 816 0 549 477 c
418 340 549 477 418 340 c
418 0 418 340 418 0 c
137 0 418 0 137 0 c
closepath } bind def
/s108 {
147 0 m
147 1466 147 0 147 1466 c
428 1466 147 1466 428 1466 c
428 0 428 1466 428 0 c
147 0 428 0 147 0 c
closepath } bind def
/s109 {
126 1062 m
385 1062 126 1062 385 1062 c
385 917 385 1062 385 917 c
477.67 1029.67 588 1086 716 1086 c
784 1086 843 1072 893 1044 c
943 1016 984 973.67 1016 917 c
1062.67 973.67 1113 1016 1167 1044 c
1221 1072 1278.67 1086 1340 1086 c
1418 1086 1484 1070.17 1538 1038.5 c
1592 1006.83 1632.33 960.33 1659 899 c
1678.33 853.67 1688 780.33 1688 679 c
1688 0 1688 679 1688 0 c
1407 0 1688 0 1407 0 c
1407 607 1407 0 1407 607 c
1407 712.33 1397.33 780.33 1378 811 c
1352 851 1312 871 1258 871 c
1218.67 871 1181.67 859 1147 835 c
1112.33 811 1087.33 775.83 1072 729.5 c
1056.67 683.17 1049 610 1049 510 c
1049 0 1049 510 1049 0 c
768 0 1049 0 768 0 c
768 582 768 0 768 582 c
768 685.33 763 752 753 782 c
743 812 727.5 834.33 706.5 849 c
685.5 863.67 657 871 621 871 c
577.67 871 538.67 859.33 504 836 c
469.33 812.67 444.5 779 429.5 735 c
414.5 691 407 618 407 516 c
407 0 407 516 407 0 c
126 0 407 0 126 0 c
126 1062 126 0 126 1062 c
closepath } bind def
/s110 {
1113 0 m
832 0 1113 0 832 0 c
832 542 832 0 832 542 c
832 656.67 826 730.83 814 764.5 c
802 798.17 782.5 824.33 755.5 843 c
728.5 861.67 696 871 658 871 c
609.33 871 565.67 857.67 527 831 c
488.33 804.33 461.83 769 447.5 725 c
433.17 681 426 599.67 426 481 c
426 0 426 481 426 0 c
145 0 426 0 145 0 c
145 1062 145 0 145 1062 c
406 1062 145 1062 406 1062 c
406 906 406 1062 406 906 c
498.67 1026 615.33 1086 756 1086 c
818 1086 874.67 1074.83 926 1052.5 c
977.33 1030.17 1016.17 1001.67 1042.5 967 c
1068.83 932.33 1087.17 893 1097.5 849 c
1107.83 805 1113 742 1113 660 c
1113 0 1113 660 1113 0 c
closepath } bind def
/s111 {
82 546 m
82 639.33 105 729.67 151 817 c
197 904.33 262.17 971 346.5 1017 c
430.83 1063 525 1086 629 1086 c
789.67 1086 921.33 1033.83 1024 929.5 c
1126.67 825.17 1178 693.33 1178 534 c
1178 373.33 1126.17 240.17 1022.5 134.5 c
918.83 28.83 788.33 -24 631 -24 c
533.67 -24 440.83 -2 352.5 42 c
264.17 86 197 150.5 151 235.5 c
105 320.5 82 424 82 546 c
closepath 370 531 m
370 425.67 395 345 445 289 c
495 233 556.67 205 630 205 c
703.33 205 764.83 233 814.5 289 c
864.17 345 889 426.33 889 533 c
889 637 864.17 717 814.5 773 c
764.83 829 703.33 857 630 857 c
556.67 857 495 829 445 773 c
395 717 370 636.33 370 531 c
closepath } bind def
/s114 {
416 0 m
135 0 416 0 135 0 c
135 1062 135 0 135 1062 c
396 1062 135 1062 396 1062 c
396 911 396 1062 396 911 c
440.67 982.33 480.83 1029.33 516.5 1052 c
552.17 1074.67 592.67 1086 638 1086 c
702 1086 763.67 1068.33 823 1033 c
736 788 823 1033 736 788 c
688.67 818.67 644.67 834 604 834 c
564.67 834 531.33 823.17 504 801.5 c
476.67 779.83 455.17 740.67 439.5 684 c
423.83 627.33 416 508.67 416 328 c
416 0 416 328 416 0 c
closepath } bind def
/s115 {
48 303 m
330 346 48 303 330 346 c
342 291.33 366.33 249.83 403 221.5 c
439.67 193.17 491 179 557 179 c
629.67 179 684.33 192.33 721 219 c
745.67 237.67 758 262.67 758 294 c
758 315.33 751.33 333 738 347 c
724 360.33 692.67 372.67 644 384 c
417.33 434 273.67 479.67 213 521 c
129 578.33 87 658 87 760 c
87 852 123.33 929.33 196 992 c
268.67 1054.67 381.33 1086 534 1086 c
679.33 1086 787.33 1062.33 858 1015 c
928.67 967.67 977.33 897.67 1004 805 c
739 756 1004 805 739 756 c
727.67 797.33 706.17 829 674.5 851 c
642.83 873 597.67 884 539 884 c
465 884 412 873.67 380 853 c
358.67 838.33 348 819.33 348 796 c
348 776 357.33 759 376 745 c
401.33 726.33 488.83 700 638.5 666 c
788.17 632 892.67 590.33 952 541 c
1010.67 491 1040 421.33 1040 332 c
1040 234.67 999.33 151 918 81 c
836.67 11 716.33 -24 557 -24 c
412.33 -24 297.83 5.33 213.5 64 c
129.17 122.67 74 202.33 48 303 c
closepath } bind def
/s116 {
634 1062 m
634 838 634 1062 634 838 c
442 838 634 838 442 838 c
442 410 442 838 442 410 c
442 323.33 443.83 272.83 447.5 258.5 c
451.17 244.17 459.5 232.33 472.5 223 c
485.5 213.67 501.33 209 520 209 c
546 209 583.67 218 633 236 c
657 18 633 236 657 18 c
591.67 -10 517.67 -24 435 -24 c
384.33 -24 338.67 -15.5 298 1.5 c
257.33 18.5 227.5 40.5 208.5 67.5 c
189.5 94.5 176.33 131 169 177 c
163 209.67 160 275.67 160 375 c
160 838 160 375 160 838 c
31 838 160 838 31 838 c
31 1062 31 838 31 1062 c
160 1062 31 1062 160 1062 c
160 1273 160 1062 160 1273 c
442 1437 160 1273 442 1437 c
442 1062 442 1437 442 1062 c
634 1062 442 1062 634 1062 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_ArialBold exch definefont pop
%%EndFont
%%BeginFont: /MC4_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC4_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
/BoundingBoxes 2 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
end
/Metrics 2 dict def
 Metrics begin
/s32 569 def
end
/CharProcs 2 dict def
CharProcs begin
/.notdef {} def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC4_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 817.65 571.21 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.240183 0.239628 sc

/initmtx mtx cmtx def
[0.999213 -0 0 -1.00157 0 2383.74] concat
gs
gs
1 -1 sc
/MC1_ArialBold 116 self 477 -2228 m
(2008)[65 65 65 65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 1094 -2228 m
(2009)[65 65 65 65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 1712 -2228 m
(2010)[65 65 65 65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 2329 -2228 m
(2011)[65 65 65 65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 2946 -2228 m
(2012)[65 65 65 65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 164 -2103 m
(6)[65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 164 -1791 m
(7)[65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 164 -1480 m
(8)[65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 164 -1168 m
(9)[65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 99 -856 m
(10)[65 65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 99 -545 m
(11)[65 65 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_ArialBold 116 self 99 -233 m
(12)[65 65 ] xs
1 -1 sc
gr
298 2090 m
298 2069 l
21 sw
1 sj
1 scap
st
607 2110 m
607 2069 l
st
915 2090 m
915 2069 l
st
1224 2110 m
1224 2069 l
st
1533 2090 m
1533 2069 l
st
1842 2110 m
1842 2069 l
st
2150 2090 m
2150 2069 l
st
2459 2110 m
2459 2069 l
st
2768 2090 m
2768 2069 l
st
3076 2110 m
3076 2069 l
st
3385 2090 m
3385 2069 l
st
298 2069 m
3385 2069 l
st
257 2069 m
298 2069 l
st
277 1913 m
298 1913 l
st
257 1757 m
298 1757 l
st
277 1601 m
298 1601 l
st
257 1446 m
298 1446 l
st
277 1290 m
298 1290 l
st
257 1134 m
298 1134 l
st
277 978 m
298 978 l
st
257 822 m
298 822 l
st
277 666 m
298 666 l
st
257 511 m
298 511 l
st
277 355 m
298 355 l
st
257 199 m
298 199 l
st
277 43 m
298 43 l
st
298 2069 m
298 43 l
st
gs
pathproc 298 43 3088 2027 np rectpath
/eocl cland
np exec
1224 997 m
607 1547 l
26 sw
st
1842 556 m
1224 997 l
st
2459 106 m
1842 556 l
st
3076 270 m
2459 106 l
st
571 1511 72 72 rectfill
2459 106 m
6 sw
571 1511 72 72 rectstroke
1188 961 72 72 rectfill
1188 961 72 72 rectstroke
1806 520 72 72 rectfill
1806 520 72 72 rectstroke
2423 70 72 72 rectfill
2423 70 72 72 rectstroke
3040 234 72 72 rectfill
3040 234 72 72 rectstroke
gr
gs
pathproc 298 43 3088 2027 np rectpath
/eocl cland
np exec
1224 1335 m
607 1785 l
26 sw
1 0 0 rgb
st
1842 990 m
1224 1335 l
st
2459 898 m
1842 990 l
st
3076 1362 m
2459 898 l
st
np
607 1785 41 0 360  a
cp
gs
eofi
gr
6 sw
st
np
1224 1335 41 0 360  a
cp
gs
eofi
gr
st
np
1842 990 41 0 360  a
cp
gs
eofi
gr
st
np
2459 898 41 0 360  a
cp
gs
eofi
gr
st
np
3076 1362 41 0 360  a
cp
gs
eofi
gr
st
gr
gs
gs
1 -1 sc
119 -1614 tr
90 ro
/MC2_ArialBold 138 self 0 0 m
(Recall Rate \(%\))[103 79 79 79 40 40 40 103 79 47 79 40 47 127 47 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC3_ArialBold 138 self 819 -2339 m
(Dataset Partitioning Time Point)[100 77 46 77 77 77 46 38 92 77 54 46 38 46 38 84 84 38 84 84 38 84 38 123 77 38 92 84 38 84 46 ] xs
1 -1 sc
gr
641 39 m
1909 39 l
1909 412 l
641 412 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
st
gs
gs
gs
734 151 m
1050 151 l
26 sw
st
gr
857 116 70 70 rectfill
641 412 m
6 sw
857 116 70 70 rectstroke
gr
1 -1 sc
/MC4_Arial 143 self 1050 -199 m
( )[39 ] xs
1 -1 sc
1 -1 sc
/MC3_ArialBold 142 self 1089 -199 m
(MVCWalker)[118 95 103 134 79 39 79 79 55 ] xs
1 -1 sc
gs
gs
734 331 m
1050 331 l
26 sw
1 0 0 rgb
st
gr
np
892 331 40 0 360  a
cp
gs
1 0 0 rgb
eofi
gr
6 sw
1 0 0 rgb
st
gr
1 -1 sc
1050 -379 m
( )[39 ] xs
1 -1 sc
1 -1 sc
1089 -379 m
(RWR)[103 134 103 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
